source "${0%/*}/../share/elixir-install/elixir-install.sh"

parse_options "$@" || exit $?

if [[ -z "$elixir" ]]; then
  list_elixirs
  exit $?
fi

if [[ $force_update -eq 1 ]] || are_elixir_versions_missing "$elixir"; then
  log "Updating $elixir versions ..."
  download_elixir_versions "$elixir" || fail "Failed to download $elixir versions!"
fi

init || exit $?

if [[ $no_reinstall -eq 1 ]] && [[ -x "$install_dir/bin/elixir" ]]; then
  log "Elixir is already installed into $install_dir"
  exit
fi

log "Installing $elixir $elixir_version into $install_dir ..."

pre_install || fail "Pre-install tasks failed!"

if [[ ! $no_download -eq 1 ]]; then
  download_elixir || fail "Download of $elixir_url failed!"
fi

if [[ ! $no_verify -eq 1 ]]; then
  verify_elixir || fail "Verification of $elixir_archive failed!"
fi

if [[ ! $no_extract -eq 1 ]]; then
  extract_elixir || fail "Unpacking of $elixir_archive failed!"
fi

cd "$src_dir/$elixir_dir_name"
configure_elixir || fail "Configuration of $elixir $elixir_version failed!"
clean_elixir     || fail "Cleaning $elixir $elixir_version failed!"
compile_elixir   || fail "Compiling $elixir $elixir_version failed!"
install_elixir   || fail "Installation of $elixir $elixir_version failed!"
post_install     || fail "Post-install tasks failed!"

if [[ $cleanup -eq 1 ]]; then
  cleanup_source  || fail "Cleanup of archive and unpacked source in $src_dir/ failed!"
fi

log "Successfully installed $elixir $elixir_version into $install_dir"
